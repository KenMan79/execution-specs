:mod:`ethereum.utils.hexadecimal`
=================================

.. py:module:: ethereum.utils.hexadecimal

Utility Functions For Hexadecimal Strings
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

..contents:: Table of Contents
    :backlinks: none
    :local:

Introduction
------------

Hexadecimal strings specific utility functions used in this specification.


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::
   :nosignatures:

   ethereum.utils.hexadecimal.has_hex_prefix
   ethereum.utils.hexadecimal.remove_hex_prefix
   ethereum.utils.hexadecimal.hex_to_bytes
   ethereum.utils.hexadecimal.hex_to_bytes8
   ethereum.utils.hexadecimal.hex_to_bytes32
   ethereum.utils.hexadecimal.hex_to_hash
   ethereum.utils.hexadecimal.hex_to_root
   ethereum.utils.hexadecimal.hex_to_bloom
   ethereum.utils.hexadecimal.hex_to_address
   ethereum.utils.hexadecimal.hex_to_uint
   ethereum.utils.hexadecimal.hex_to_u256



Module Details
---------------

has_hex_prefix
~~~~~~~~~~~~~~


.. function:: has_hex_prefix(hex_string: str) -> bool
   :noindexentry:

   Check if a hex string starts with hex prefix (0x).

   :param hex_string: The hexadecimal string to be checked for presence of prefix.

   :returns: **has_prefix** -- Boolean indicating whether the hex string has 0x prefix.
   :rtype: `bool`




.. undocinclude:: /../src/ethereum/utils/hexadecimal.py
   :language: python
   :lines: 19-33

remove_hex_prefix
~~~~~~~~~~~~~~~~~


.. function:: remove_hex_prefix(hex_string: str) -> str
   :noindexentry:

   Remove 0x prefix from a hex string if present. This function returns the
   passed hex string if it isn't prefixed with 0x.

   :param hex_string: The hexadecimal string whose prefix is to be removed.

   :returns: **modified_hex_string** -- The hexadecimal string with the 0x prefix removed if present.
   :rtype: `str`




.. undocinclude:: /../src/ethereum/utils/hexadecimal.py
   :language: python
   :lines: 36-54

hex_to_bytes
~~~~~~~~~~~~


.. function:: hex_to_bytes(hex_string: str) -> ethereum.base_types.Bytes
   :noindexentry:

   Convert hex string to bytes.

   :param hex_string: The hexadecimal string to be converted to bytes.

   :returns: **byte_stream** -- Byte stream corresponding to the given hexadecimal string.
   :rtype: `bytes`




.. undocinclude:: /../src/ethereum/utils/hexadecimal.py
   :language: python
   :lines: 57-71

hex_to_bytes8
~~~~~~~~~~~~~


.. function:: hex_to_bytes8(hex_string: str) -> ethereum.base_types.Bytes8
   :noindexentry:

   Convert hex string to 8 bytes.

   :param hex_string: The hexadecimal string to be converted to 8 bytes.

   :returns: **8_byte_stream** -- 8-byte stream corresponding to the given hexadecimal string.
   :rtype: `bytes`




.. undocinclude:: /../src/ethereum/utils/hexadecimal.py
   :language: python
   :lines: 74-88

hex_to_bytes32
~~~~~~~~~~~~~~


.. function:: hex_to_bytes32(hex_string: str) -> ethereum.base_types.Bytes32
   :noindexentry:

   Convert hex string to 32 bytes.

   :param hex_string: The hexadecimal string to be converted to 32 bytes.

   :returns: **32_byte_stream** -- 32-byte stream corresponding to the given hexadecimal string.
   :rtype: `bytes`




.. undocinclude:: /../src/ethereum/utils/hexadecimal.py
   :language: python
   :lines: 91-105

hex_to_hash
~~~~~~~~~~~


.. function:: hex_to_hash(hex_string: str) -> ethereum.crypto.Hash32
   :noindexentry:

   Convert hex string to hash32 (32 bytes).

   :param hex_string: The hexadecimal string to be converted to hash32.

   :returns: **hash** -- 32-byte stream obtained from the given hexadecimal string.
   :rtype: `Hash32`




.. undocinclude:: /../src/ethereum/utils/hexadecimal.py
   :language: python
   :lines: 108-122

hex_to_root
~~~~~~~~~~~


.. function:: hex_to_root(hex_string: str) -> ethereum.frontier.eth_types.Root
   :noindexentry:

   Convert hex string to trie root.

   :param hex_string: The hexadecimal string to be converted to trie root.

   :returns: **root** -- Trie root obtained from the given hexadecimal string.
   :rtype: `Root`




.. undocinclude:: /../src/ethereum/utils/hexadecimal.py
   :language: python
   :lines: 125-139

hex_to_bloom
~~~~~~~~~~~~


.. function:: hex_to_bloom(hex_string: str) -> ethereum.frontier.eth_types.Bloom
   :noindexentry:

   Convert hex string to bloom.

   :param hex_string: The hexadecimal string to be converted to bloom.

   :returns: **bloom** -- Bloom obtained from the given hexadecimal string.
   :rtype: `Bloom`




.. undocinclude:: /../src/ethereum/utils/hexadecimal.py
   :language: python
   :lines: 142-156

hex_to_address
~~~~~~~~~~~~~~


.. function:: hex_to_address(hex_string: str) -> ethereum.frontier.eth_types.Address
   :noindexentry:

   Convert hex string to Address (20 bytes).

   :param hex_string: The hexadecimal string to be converted to Address.

   :returns: **address** -- The address obtained from the given hexadecimal string.
   :rtype: `Address`




.. undocinclude:: /../src/ethereum/utils/hexadecimal.py
   :language: python
   :lines: 159-173

hex_to_uint
~~~~~~~~~~~


.. function:: hex_to_uint(hex_string: str) -> ethereum.base_types.Uint
   :noindexentry:

   Convert hex string to Uint.

   :param hex_string: The hexadecimal string to be converted to Uint.

   :returns: **converted** -- The unsigned integer obtained from the given hexadecimal string.
   :rtype: `Uint`




.. undocinclude:: /../src/ethereum/utils/hexadecimal.py
   :language: python
   :lines: 176-190

hex_to_u256
~~~~~~~~~~~


.. function:: hex_to_u256(hex_string: str) -> ethereum.base_types.U256
   :noindexentry:

   Convert hex string to U256.

   :param hex_string: The hexadecimal string to be converted to U256.

   :returns: **converted** -- The U256 integer obtained from the given hexadecimal string.
   :rtype: `U256`




.. undocinclude:: /../src/ethereum/utils/hexadecimal.py
   :language: python
   :lines: 193-207
